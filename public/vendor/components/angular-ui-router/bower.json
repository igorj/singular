{
  "name": "angular-ui-router",
  "version": "0.0.1",
  "main": "./release/angular-ui-router.min.js",
  "dependencies": {
    "angular": ">= 1.0.6"
  },
  "gitHead": "18af2c4404b5cdc435c427bbd668d075b4830bc0",
  "readme": "[![Build Status](https://travis-ci.org/angular-ui/ui-router.png?branch=master)](https://travis-ci.org/angular-ui/ui-router)\n\n# UI-Router\n\n**Attention**: UI-Router uses <code>grunt >= 0.4.x</code> make sure to upgrade your environment and read the\n[Migration Guide](http://gruntjs.com/upgrading-from-0.3-to-0.4).\n\nFinally a de-facto solution to nested views and routing.\n\n\n## Main Goal\nTo evolve the concept of an Angular \"Route\" into a more general concept of a \"State\" for managing complex application UI states.\n\n## Main Features\n1. **Robust State Management**\n>`$state` and `$stateProvider`\n\n2. **More Powerful Views**\n>`ui-view` directive (used in place of `ng-view`)\n\n3. **Named Views**\n>`<div ui-view=\"chart\">`\n\n4. **Multiple Parallel Views**\n>\n```\n<div ui-view=\"chart1\">\n<div ui-view=\"chart2\">\n```\n5. **Nested Views**\n>load templates that contain nested `ui-view`s as deep as you'd like.\n\n6. **Routing**\n>States can map to URLs (though it's not required)\n\n\n*Basically, do whatever you want with states and routes.*\n\n\n## Resources\n\n* [In-Depth Overview](https://github.com/angular-ui/ui-router/wiki)\n* [FAQ](https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions)\n* [Sample App](http://angular-ui.github.com/ui-router/sample/) ([Source](https://github.com/angular-ui/ui-router/tree/master/sample))\n* [Generated Docs](http://angular-ui.github.com/ui-router/build/doc/)\n* Latest build: [angular-ui-states.min.js](http://angular-ui.github.com/ui-router/build/angular-ui-states.min.js)\n  (uncompressed [angular-ui-states.js](http://angular-ui.github.com/ui-router/build/angular-ui-states.js))\n\n## Quick Start\n1. Add angular-ui-states.min.js to your index.html\n>\n```html\n<!doctype html>\n<html ng-app=\"myapp\">\n<head>\n      <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.0.6/angular.min.js\"></script>\n      <script src=\"angular-ui-states.js\"></script>\n```\n\n2. Add one or more `ui-view` to your app, give them names.\n>\n```html\n<body>\n    <div ui-view=\"viewA\"></div>\n    <div ui-view=\"viewB\"></div>\n    <!-- Also a way to navigate -->\n    <a href=\"#/route1\">Route 1</a>\n    <a href=\"#/route2\">Route 2</a>\n</body>\n```\n\n3. Set `ui.state` as a dependency in your module\n>\n```javascript\nvar myapp = angular.module('myapp', ['ui.state']) \n```\n\n4. Set up your states in the module config\n>\n```javascript\nmyapp.config(function($stateProvider, $routeProvider){\n  $stateProvider\n\t\t.state('index', {\n\t\t\turl: \"\", // root route\n\t\t\tviews: {\n\t\t\t\t\"viewA\": {\n\t\t\t\t\ttemplateUrl: \"index.viewA.html\"\n\t\t\t\t},\n\t\t\t\t\"viewB\": {\n\t\t\t\t\ttemplateUrl: \"index.viewB.html\"\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.state('route1', {\n\t\t\turl: \"/route1\",\n\t\t\tviews: {\n\t\t\t\t\"viewA\": {\n\t\t\t\t\ttemplateUrl: \"route1.viewA.html\"\n\t\t\t\t},\n\t\t\t\t\"viewB\": {\n\t\t\t\t\ttemplateUrl: \"route1.viewB.html\"\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.state('route2', {\n\t\t\turl: \"/route2\",\n\t\t\tviews: {\n\t\t\t\t\"viewA\": {\n\t\t\t\t\ttemplateUrl: \"route2.viewA.html\"\n\t\t\t\t},\n\t\t\t\t\"viewB\": {\n\t\t\t\t\ttemplateUrl: \"route2.viewB.html\"\n\t\t\t\t}\n\t\t\t}\n\t\t})\n})\n```\n\n5. See this quick start example working. \n>**[Go to Quick Start Plunker](http://plnkr.co/edit/vDURUN?p=preview)**\n\n6. This only scratches the surface! You've only seen Named Views and Parallel Views. Learn more about `state()` options, Nested Views, URL routing options, backwards compatibility, and more! \n>**[Dive Deeper!](https://github.com/angular-ui/ui-router/wiki)**\n\n## Developing\n\nDependencies for building the solution and running tests:\n\n* [grunt-cli](https://github.com/gruntjs/grunt-cli) - run: `$ npm install -g grunt-cli`\n* Then install development dependencies with: `$ npm install`\n\nThere is a number of targets in the gruntfile that is used to building the solution, documents etc.\n\n* `grunt`: Perform a normal build, runs jshint and karma tests\n* `grunt build`: Perform a normal build\n* `grunt dist`: Perform a clean build and generate documentation\n* `grunt dev`: Run dev server (sample app) and watch for changes, builds and runs karma tests on changes.\n\n",
  "readmeFilename": "README.md",
  "_id": "ui-router@0.0.1",
  "description": "[![Build Status](https://travis-ci.org/angular-ui/ui-router.png?branch=master)](https://travis-ci.org/angular-ui/ui-router)",
  "repository": {
    "type": "git",
    "url": "git://github.com/angular-ui/ui-router"
  }
}